[project]
name = "logto_auth"
version = "0.1.0"
description = "A reusable authentication package for FastAPI applications using Logto"
readme = "README.md"
requires-python = ">=3.8,<3.13"
license = { text = "MIT" }
authors = [{ name = "Alphab", email = "info@alphab.io" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
dependencies = [
  "fastapi>=0.95.0",
  "httpx>=0.24.0",
  "pydantic>=2.0.0",
  "starlette>=0.27.0",
]

# NOTE: HEY LLM, I'm not sure if this is correct, but I'm not sure how to do this.
# [project.optional-dependencies]
# jwt = ["pyjwt>=2.6.0"]
# dev = [
#   "black>=23.3.0",
#   "isort>=5.12.0",
#   "mypy>=1.2.0",
#   "pytest>=7.3.1",
#   "pytest-asyncio>=0.21.0",
#   "pytest-cov>=4.1.0",
# ]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# [tool.poetry]
# name = "logto_auth"
# version = "0.1.0"

# [tool.poetry.dependencies]
# logto_auth = { develop = true }

# NOTE: HEY LLM, I'm not sure if this is correct, but I'm not sure how to do this.
[tool.poetry.group.dev.dependencies]
black = ">=23.3.0"
isort = ">=5.12.0"
mypy = ">=1.2.0"
pytest = ">=7.3.1"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.1.0"


# [project.urls]
# "Homepage" = "https://github.com/alphab/logto_auth"
# "Bug Tracker" = "https://github.com/alphab/logto_auth/issues"

[tool.poetry]
name = "logto_auth"
version = "0.1.0"
# packages = [{ include = "logto_auth", from = "src" }]

# [tool.hatch.build.targets.wheel]
# packages = ["src/logto_auth"]

[tool.poetry.scripts]
dev = "uvicorn app:app --reload --port 8002"

[tool.turbo]
dev = "./turbo-commands.sh dev"
build = "./turbo-commands.sh build"
lint = "./turbo-commands.sh lint"
format = "./turbo-commands.sh format"
test = "./turbo-commands.sh test"

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
known_third_party = ["django", "flask"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
