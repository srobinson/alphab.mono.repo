#!/usr/bin/env node

const PackageDetector = require("../lib/utils/package-detector");
const TypeScriptAppBuilder = require("../lib/builders/typescript-app");
const TypeScriptLibraryBuilder = require("../lib/builders/typescript-library");
const PythonAppBuilder = require("../lib/builders/python-app");
const PythonLibraryBuilder = require("../lib/builders/python-library");
const ConfigPackageBuilder = require("../lib/builders/config-package");

const createLogger = require("../../alphab-logging-ui/src/index").createLogger;
const logger = createLogger("alphab-test-coverage");

async function main() {
  try {
    const detector = new PackageDetector(process.cwd());
    const packageType = detector.getPackageType();

    let builder;

    switch (packageType) {
      case "typescript-app":
        logger.log("🧪 Testing typescript app");
        builder = new TypeScriptAppBuilder(detector);
        break;
      case "typescript-library":
        logger.log("🧪 Testing typescript library");
        builder = new TypeScriptLibraryBuilder(detector);
        break;
      case "python-app":
        logger.log("🧪 Testing python app");
        builder = new PythonAppBuilder(detector);
        break;
      case "python-library":
        logger.log("🧪 Testing python library");
        builder = new PythonLibraryBuilder(detector);
        break;
      case "config-package":
        logger.log("🧪 Testing config package");
        builder = new ConfigPackageBuilder(detector);
        break;
      default:
        logger.error(`❌ Unknown package type: ${packageType}`);
        process.exit(1);
    }

    if (typeof builder.testCoverage === "function") {
      await builder.testCoverage();
    } else {
      logger.log(`⚠️  Test coverage not supported for package type: ${packageType}`);
      process.exit(0);
    }
  } catch (error) {
    logger.error(`❌ Test coverage failed: ${error.message}`);
    process.exit(1);
  }
}

main();
