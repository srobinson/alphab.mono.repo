[project]
name = "particle0"
version = "0.1.0"
description = "A reusable authentication package for FastAPI applications using Logto"
readme = "README.md"
requires-python = ">=3.11,<3.13"
license = { text = "MIT" }
authors = [{ name = "alphab-particle0" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "fastapi>=0.95.0",
  "httpx>=0.24.0",
  "pydantic-settings>=2.0.0",
  "pydantic>=2.0.0",
  "starlette>=0.27.0",
  "uvicorn (>=0.34.3,<0.35.0)",
]
[project.optional-dependencies]
jwt = ["pyjwt>=2.6.0"]
dev = [
  "black>=23.3.0",
  "isort>=5.12.0",
  "mypy>=1.2.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.1.0",
  "pytest>=7.3.1",
  "uvicorn>=0.34.3,<0.35.0",
]
[project.urls]
Homepage = "https://github.com/alphab/alphab.mono.repo"
"Bug Tracker" = "https://github.com/alphab/alphab.mono.repo/issues"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "particle0"
version = "0.1.0"

[tool.poetry.group.dev.dependencies]
alphab_logto = { path = "../alphab-logto", develop = true }
alphab_logging = { path = "../alphab-logging", develop = true }

[tool.poetry.group.prod.dependencies]
alphab_logto = { path = "../alphab-logto" }
alphab_logging = { path = "../alphab-logging" }

[tool.black]
line-length = 120
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
known_third_party = ["django", "flask"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.poetry.scripts]
start = "poetry run uvicorn particle0.main:app --host 0.0.0.0 --port 8000"
dev = "poetry run uvicorn particle0.main:app --reload"

# [tool.turbo]
# dev = "./turbo-commands.sh dev"
# build = "./turbo-commands.sh build"
# lint = "./turbo-commands.sh lint"
# format = "./turbo-commands.sh format"
# test = "./turbo-commands.sh test"
