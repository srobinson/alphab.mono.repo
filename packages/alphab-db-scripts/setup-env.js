#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const readline = require("readline");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

function question(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, resolve);
  });
}

async function setupEnvironment() {
  console.log("ðŸ”§ Setting up Supabase environment variables\n");

  const supabaseUrl = await question("Enter your Supabase URL: ");
  const anonKey = await question("Enter your Supabase anon key: ");
  const serviceKey = await question(
    "Enter your Supabase service key (optional, press enter to skip): ",
  );

  const envContent = `# Supabase Configuration
# Generated by setup-env.js

SUPABASE_URL=${supabaseUrl}
SUPABASE_ANON_KEY=${anonKey}
${serviceKey ? `SUPABASE_SERVICE_KEY=${serviceKey}` : "# SUPABASE_SERVICE_KEY=your-service-key-here"}

# Optional settings
DB_POOL_SIZE=10
DB_TIMEOUT=30000
NODE_ENV=development
`;

  // Write to alphab-db-supabase package
  const supabaseEnvPath = path.join(__dirname, "../alphab-db-supabase/.env.local");
  fs.writeFileSync(supabaseEnvPath, envContent);

  console.log(`\nâœ… Environment file created at: ${supabaseEnvPath}`);
  console.log("\nðŸ§ª Test your connection with:");
  console.log("  ./packages/alphab-db-scripts/bin/alphab-migrate test");

  rl.close();
}

setupEnvironment().catch(console.error);
