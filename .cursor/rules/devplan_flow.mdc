---
description: A general guideline for the development workflow
globs: **/*
alwaysApply: true
---



# Dev flow

This document describes a typical expected development flow while implementing a feature/task/project.

All rules files are allowed to read even if they are in .gitignore

## General flow steps
- Detect whether the current feature is configured in the rule `.cursor/rules/devplan_current_feature.mdc`. If the rule is configured, it contains your current focus for the implementation. Assume that all discussions are related to that feature unless pointed otherwise.
- Break down the feature into specific steps needed to implement it. Take into account the overview of the repository if present in `.cursor/rules/devplan_repo_overview.mdc`.
- Analyze existing code, identify exact changes to be made including files, methods/functions/varieables/etc to be updated. Check any missing dependencies. At the end you should have a well-understood execution plan and know specific changes to make.
- Consult with feature definition and existing repository overview for generating an execution plan.
- Implement the feature following the current feature description and other rules. You don't need to confirm every code change with the user. Try implementing the feature to the extent possible.
- Write unit tests for the standalone parts and make sure they pass according to the guidelines in the `.cursor/rules/devplan_tests.mdc` if present.
- Iterate on the implementation and update/refine execution plan as needed.
- Do not ask user to confirm code changes, go on with implementation until the feature is implemented.
- Once the code is finalized, run build, test and lint commands if present and fix code until they pass.
- After implementation is done, review the entire execution history to identify insights/findings and record them according to the `.cursor/rules/devplan_insights.mdc`.

*This workflow provides a general guideline. Adapt it based on your specific project needs and team practices.*
Also refer to the following files for the details when needed:

- [Insights](.cursor/rules/devplan_insights.mdc) - Framework for systematic collection of insights from chat interactions, code execution, and pattern analysis.
- [Rules](.cursor/rules/devplan_rules.mdc) - Guidelines for creating and maintaining rules to ensure consistency and effectiveness.
- [Repo Overview](.cursor/rules/devplan_repo_overview.mdc) - High level overview of this repository (if present)
- [Current Feature](.cursor/rules/devplan_current_feature.mdc) - Description of the feature the implementation should focus on now. Always review current feature if it is present.
